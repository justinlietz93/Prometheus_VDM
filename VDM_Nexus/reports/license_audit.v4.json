{
  "by_root_summary": [
    {
      "matched": 3,
      "matched_pct": 100.0,
      "missing": 0,
      "missing_pct": 0.0,
      "root": "(repo-root)",
      "scanned": 3
    },
    {
      "matched": 0,
      "matched_pct": 0.0,
      "missing": 9,
      "missing_pct": 100.0,
      "root": ".codacy",
      "scanned": 9
    },
    {
      "matched": 108,
      "matched_pct": 99.08,
      "missing": 1,
      "missing_pct": 0.92,
      "root": "Derivation",
      "scanned": 109
    },
    {
      "matched": 4,
      "matched_pct": 25.0,
      "missing": 12,
      "missing_pct": 75.0,
      "root": "VDM_Nexus",
      "scanned": 16
    },
    {
      "matched": 218,
      "matched_pct": 99.09,
      "missing": 2,
      "missing_pct": 0.91,
      "root": "fum_rt",
      "scanned": 220
    },
    {
      "matched": 28,
      "matched_pct": 71.79,
      "missing": 11,
      "missing_pct": 28.21,
      "root": "tools",
      "scanned": 39
    }
  ],
  "fixes_applied": [
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "conftest.py",
      "root": "(repo-root)"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "test_axiomatic_theory.py",
      "root": "(repo-root)"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/geom_adapter_stub.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/md_hygiene_check.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/axiom_guard.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/extract_say_texts.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/geom_bundle_builder.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/Collapse/code/common/io_paths.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/fit_H_edge.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/flux_sweep.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/flux_symbolic_full.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/optimize_H_params.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/grid_tau0.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/flux_symbolic.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/edge_ansatz_fit.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/analysis/build_and_test_H_candidate.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/io_paths.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/constants.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/data/results_db.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/causality/event_dag.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/causality/diagnostics.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/causality/intervals.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/causality/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/authorization/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/common/plotting/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/tests/fluid_dynamics/test_taylor_green_decay.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/tests/reaction_diffusion/test_rd_acceptance.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/tests/reaction_diffusion/test_rd_dispersion.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/thermo_routing/run_thermo_routing.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/thermo_routing/run_tr_v2_prereg_biased_main_aggregate.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/thermo_routing/run_tr_v2_prereg_biased_main_full.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/thermo_routing/run_tr_v2_prereg_biased_main.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/thermo_routing/run_tr_v2_prereg_biased.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/tachyonic_condensation/run_tachyon_tube.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/memory_steering/plot_memory_steering.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/memory_steering/memory_steering_acceptance.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/fluid_dynamics/taylor_green_benchmark.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/fluid_dynamics/lid_cavity_benchmark.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/causality/run_causality_dag_audit.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/rd_conservation/run_rd_conservation.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/intelligence_model/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/metriplectic/j_step.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/metriplectic/compose.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/reaction_diffusion/reaction_exact.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/reaction_diffusion/rd_dispersion_experiment.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/reaction_diffusion/rd_front_speed_experiment.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/reaction_diffusion/rd_front_speed_sweep.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/intelligence_model/modules/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/intelligence_model/runners/__init__.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/code/physics/fluid_dynamics/fluids/lbm2d.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "Derivation/Templates/Domain_Template/code/common/io_paths.py",
      "root": "Derivation"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "tools/provenance/generate_manifest.py",
      "root": "tools"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/io/maps_ring.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/sidm_curve_harness.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/rd_dispersion_runner.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/pta_correlation_harness.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/vacuum_demographics_harness.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/harness_logging.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/ci_gates.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/router_regression_figures.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/rd_front_speed_runner.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/frontend/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/viz.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/speak.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/ingest.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/checkpointing.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/macro_board.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/maps_ws.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/redis_out.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/smoke.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/engram.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/emission.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/runtime/helpers/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/frontend/styles/theme.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/frontend/controllers/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/frontend/utilities/profiles.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/core/cosmology/router.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/core/cosmology/events.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/core/cosmology/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/core/engine/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/tests/physics/test_ci_gates.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/tests/physics/test_vacuum_demographics_harness.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/physics/memory_steering/plot_memory_steering.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/io/visualization/maps_ring.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/io/visualization/websocket_server.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/io/visualization/__init__.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "fum_rt/io/logging/rolling_jsonl.py",
      "root": "fum_rt"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "VDM_Nexus/scripts/nexus_validate_gate.py",
      "root": "VDM_Nexus"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "VDM_Nexus/scripts/nexus_resolver_print.py",
      "root": "VDM_Nexus"
    },
    {
      "action": "inserted_license_into_docstring",
      "insert_index_after_opening_quotes": 3,
      "inserted_bytes": 367,
      "inserted_lines": 9,
      "path": "VDM_Nexus/scripts/nexus_static_policy_check.py",
      "root": "VDM_Nexus"
    }
  ],
  "fixes_applied_count": 91,
  "fixes_by_root": [
    {
      "inserted": 2,
      "root": "(repo-root)"
    },
    {
      "inserted": 44,
      "root": "Derivation"
    },
    {
      "inserted": 3,
      "root": "VDM_Nexus"
    },
    {
      "inserted": 36,
      "root": "fum_rt"
    },
    {
      "inserted": 6,
      "root": "tools"
    }
  ],
  "generated_utc": "2025-10-27T17:20:00Z",
  "ignore_dirs": [
    ".cache",
    ".git",
    ".idea",
    ".venv",
    ".vscode",
    "Derivation/code/outputs",
    "VDM_Nexus/build",
    "__pycache__",
    "build",
    "dist",
    "node_modules",
    "out",
    "outputs",
    "runs",
    "venv"
  ],
  "items": [
    {
      "path": ".codacy/cli-config.yaml",
      "preview": "",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/cli.sh",
      "preview": "#!/usr/bin/env bash\n\n\nset -e +o pipefail\n\n# Set up paths first\nbin_name=\"codacy-cli-v2\"\n\n# Determine OS-specific paths\nos_name=$(uname)\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/codacy.yaml",
      "preview": "runtimes:\n    - dart@3.7.2\n    - go@1.22.3\n    - java@17.0.10\n    - node@22.2.0\n    - python@3.11.11\ntools:\n    - dartanalyzer@3.7.2\n    - eslint@8.57.0\n    - lizard@1.17.31\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\nproject(physics_nexus\n  VERSION 0.1.0\n  DESCRIPTION \"VDM Nexus desktop application\"\n  LANGUAGES CXX\n)\n\nset(CMAKE_CXX_STANDARD 20)\nset(CMAKE_CXX_STANDARD_REQUIRED ON)\n",
      "reason": "no keywords found"
    },
    {
      "path": "Derivation/Dark_Photons/init_dark_photon_quantum_docs_v2.sh",
      "preview": "#!/usr/bin/env bash\n# init_dark_photon_quantum_docs_v2.sh\n# Robust version: uses here-docs (no multi-line arg passing). Idempotent.\n# Usage:\n#   ./init_dark_photon_quantum_docs_v2.sh \"<TARGET_DIRECTORY>\"\n\nset -euo pipefail\n\nTARGET_DIR=\"${1:-}\"\nif [[ -z \"${TARGET_DIR}\" ]]; then\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/index.tsx",
      "preview": "\nimport React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport App from './App';\n\nconst rootElement = document.getElementById('root');\nif (!rootElement) {\n  throw new Error(\"Could not find root element to mount to\");\n}\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/constants.ts",
      "preview": "\nexport const EXAMPLE_QUERIES = [\n    {\n        title: \"Recursive File Crawler\",\n        query: \"a crawler that starts from the directory it's run in and crawls every folder below the script's location recursively, mapping the contents of each file to a single monolithic file with each file contents wrapped in XML and the file path in the tag, and a meta data analysis report at the very top, with the ascii map just below it, ignoring any files in its config.\",\n    },\n    {\n        title: \"Unused Code Detector\",\n        query: \"a tool that finds unused methods or imports, and mismatched dependencies between packages by parsing requirements.txt.\",\n    },\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/types.ts",
      "preview": "",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/vite.config.ts",
      "preview": "import path from 'path';\nimport { defineConfig, loadEnv } from 'vite';\n\nexport default defineConfig(({ mode }) => {\n    const env = loadEnv(mode, '.', '');\n    return {\n      define: {\n        'process.env.API_KEY': JSON.stringify(env.GEMINI_API_KEY),\n        'process.env.GEMINI_API_KEY': JSON.stringify(env.GEMINI_API_KEY)\n      },\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/App.tsx",
      "preview": "import React, { useState } from 'react';\nimport QueryForm from './components/QueryForm';\nimport ResultsDisplay from './components/ResultsDisplay';\nimport SettingsModal from './components/SettingsModal';\nimport { PythonIcon, GearIcon } from './components/icons';\nimport { generatePythonPackage } from './services/geminiService';\nimport type { GeneratedFile } from './types';\n\nconst App: React.FC = () => {\n    const [isLoading, setIsLoading] = useState<boolean>(false);\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/services/geminiService.ts",
      "preview": "import { GoogleGenAI, Type } from \"@google/genai\";\nimport type { GeneratedFile } from \"../types\";\n\nconst API_KEY = process.env.API_KEY;\n\nif (!API_KEY) {\n  throw new Error(\"API_KEY environment variable not set.\");\n}\n\nconst ai = new GoogleGenAI({ apiKey: API_KEY });\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/components/icons.tsx",
      "preview": "import React from 'react';\n\nexport const PythonIcon = ({ className }: { className?: string }) => (\n  <svg\n    className={className}\n    xmlns=\"http://www.w3.org/2000/svg\"\n    viewBox=\"0 0 24 24\"\n    fill=\"currentColor\"\n    aria-hidden=\"true\"\n  >\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/components/SettingsModal.tsx",
      "preview": "import React, { useState, useEffect } from 'react';\n\ninterface SettingsModalProps {\n    isOpen: boolean;\n    onClose: () => void;\n    onSave: (settings: { enhancerModel: string; coderModel: string }) => void;\n    initialEnhancerModel: string;\n    initialCoderModel: string;\n}\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/components/ResultsDisplay.tsx",
      "preview": "\nimport React, { useState, useEffect } from 'react';\nimport type { GeneratedFile } from '../types';\nimport { CopyIcon, CheckIcon } from './icons';\n\ninterface ResultsDisplayProps {\n  files: GeneratedFile[];\n}\n\nconst FileContentDisplay: React.FC<{ content: string }> = ({ content }) => {\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/python_utilities_generator/components/QueryForm.tsx",
      "preview": "import React, { useState } from 'react';\nimport { EXAMPLE_QUERIES } from '../constants';\nimport { LoadingSpinner, SparklesIcon, PythonIcon } from './icons';\nimport { enhanceUserPrompt } from '../services/geminiService';\n\ninterface QueryFormProps {\n    onGenerate: (query: string) => void;\n    isLoading: boolean;\n    enhancerModel: string;\n}\n",
      "reason": "no keywords found"
    },
    {
      "path": "tools/dependency_analyzer/src/dependency_analyzer/scripts/parse_js.js",
      "preview": "const fs = require('fs');\nconst parser = require('@babel/parser');\nconst path = require('path');\n\nconst filePath = process.argv[2];\n\nif (!filePath) {\n    console.error(JSON.stringify({\n        provides: [],\n        imports: [],\n",
      "reason": "no keywords found"
    },
    {
      "path": "fum_rt/ck/hip_spmv.cpp",
      "preview": "\n// Minimal HIP CSR SpMV placeholder (A*y = x) with pybind11 bindings.\n// Replace with tuned Composable Kernel kernels as you iterate.\n#include <hip/hip_runtime.h>\n#include <pybind11/pybind11.h>\n#include <pybind11/numpy.h>\nnamespace py = pybind11;\n\n__global__ void spmv_csr_kernel(\n    const int N,\n",
      "reason": "no keywords found"
    },
    {
      "path": "fum_rt/ck/build.sh",
      "preview": "\n    #!/usr/bin/env bash\n    set -euo pipefail\n    python3 - <<'PY'\nimport sys, os, subprocess, textwrap\nfrom pathlib import Path\ncode = r\"\"\"\nfrom setuptools import setup, Extension\nfrom setuptools.command.build_ext import build_ext\nimport os\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/presentation/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Presentation layer: QML/Qt UI wiring lives here later.\n# Placeholder interface library to satisfy top-level linking from physics_nexus_app.\nadd_library(physics_nexus_presentation INTERFACE)\n\ntarget_include_directories(physics_nexus_presentation INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/tests/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Generate a tiny compile-only test that includes the application ports\nfile(WRITE ${CMAKE_CURRENT_BINARY_DIR}/test_ports_compile.cpp \"\n#include \"${CMAKE_CURRENT_SOURCE_DIR}/../application/ports/ports.hpp\"\nint main() {\n  using namespace vdm_nexus::app;\n  IRunnerService* runner = nullptr;\n  IArtifactStore* store = nullptr;\n  IMarkdownReader* reader = nullptr;\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/resources/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Resources layer: qrc/assets and static files (read-only).\n# Placeholder interface target to satisfy top-level add_subdirectory(resources).\nadd_library(physics_nexus_resources INTERFACE)\n\ntarget_include_directories(physics_nexus_resources INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/infrastructure/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Infrastructure layer: adapters will be added here (SQLite approvals, filesystem, runners, schema catalog).\n# Placeholder interface library to satisfy top-level add_subdirectory while ports/adapters are implemented.\nadd_library(physics_nexus_infrastructure INTERFACE)\n\ntarget_include_directories(physics_nexus_infrastructure INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/scripts/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Scripts layer: helper CLIs/utilities (read-only canon sync, approval wrappers, report packagers).\n# Placeholder interface target to satisfy top-level add_subdirectory(scripts).\nadd_library(physics_nexus_scripts INTERFACE)\n\ntarget_include_directories(physics_nexus_scripts INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/plugins/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Plugins layer: declarative descriptors for physics/viz; no code here yet.\n# Placeholder interface target to satisfy top-level add_subdirectory(plugins).\nadd_library(physics_nexus_plugins INTERFACE)\n\ntarget_include_directories(physics_nexus_plugins INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/application/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\nadd_library(physics_nexus_application INTERFACE)\n\ntarget_include_directories(physics_nexus_application INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n  ${CMAKE_CURRENT_SOURCE_DIR}/ports\n)\n\ntarget_compile_features(physics_nexus_application INTERFACE cxx_std_20)",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/domain/CMakeLists.txt",
      "preview": "cmake_minimum_required(VERSION 3.24)\n\n# Domain layer: plain data models (no Qt/DB/Python). Placeholder library to satisfy top-level wiring.\nadd_library(physics_nexus_domain INTERFACE)\n\ntarget_include_directories(physics_nexus_domain INTERFACE\n  ${CMAKE_CURRENT_SOURCE_DIR}\n)\n\ntarget_compile_features(physics_nexus_domain INTERFACE cxx_std_20)",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/domain/models.hpp",
      "preview": "#pragma once\n//\n// VDM Nexus \u2014 Domain Models (plain data only; no framework imports)\n// References:\n//   - Architecture seams (\u00a712.4): ../../NEXUS_ARCHITECTURE.md\n//   - Execution plan (Phase 2.1.2 models list): ../../VDM_Nexus/TODO_CHECKLIST.md\n//\n// Rules:\n//   - POD/POJO style structs; no Qt/DB/Python includes.\n//   - No thresholds or equations derived from Markdown canon; thresholds are resolved by ISchemaCatalog from spec/schema.\n",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/src/main.cpp",
      "preview": "",
      "reason": "no keywords found"
    },
    {
      "path": "VDM_Nexus/application/ports/ports.hpp",
      "preview": "#pragma once\n//\n// VDM Nexus \u2014 Application Ports (Clean Architecture interfaces)\n// Reference: NEXUS standard \u00a712.4 (Clean Architecture seams)\n//   See: ../../NEXUS_ARCHITECTURE.md\n//\n// Policy:\n// - Read-only lens over canonical derivation tree; no Qt/DB/Python includes here.\n// - Thresholds/approvals are sourced from canonical structured artifacts (schemas/specs/DB), never from Markdown.\n// - Adapters live in ../infrastructure/* and must implement these interfaces.\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/analysis_options.yaml",
      "preview": "analyzer:\n    errors:\n        avoid_as: warning\n        avoid_catches_without_on_clauses: high\n        avoid_catching_errors: high\n        avoid_double_and_int_checks: warning\n        avoid_dynamic_calls: high\n        avoid_equals_and_hash_code_on_mutable_classes: high\n        avoid_field_initializers_in_const_classes: warning\n        avoid_implementing_value_types: high\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/lizard.yaml",
      "preview": "patterns:\n    Lizard_ccn-medium:\n        category: Complexity\n        description: Checks if the cyclomatic complexity of a function or logic block exceeds the medium threshold (default is 8).\n        explanation: |-\n            # Medium Cyclomatic Complexity control\n\n            Check the Cyclomatic Complexity value of a function or logic block. If the threshold is not met, raise a Medium issue. The default threshold is 7.\n        id: Lizard_ccn-medium\n        level: Warning\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/trivy.yaml",
      "preview": "severity:\n  - LOW\n  - MEDIUM\n  - HIGH\n  - CRITICAL\n\nscan:\n  scanners:\n    - vuln\n    - secret\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/eslint.config.mjs",
      "preview": "export default [\n    {\n        rules: {\n          \"constructor-super\": [\"error\"],\n          \"for-direction\": [\"error\"],\n          \"getter-return\": [\"error\", {\"allowImplicit\": false}],\n          \"no-async-promise-executor\": [\"error\"],\n          \"no-case-declarations\": [\"error\"],\n          \"no-class-assign\": [\"error\"],\n          \"no-compare-neg-zero\": [\"error\"],\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/languages-config.yaml",
      "preview": "tools:\n    - name: dartanalyzer\n      languages: [Dart]\n      extensions: [.dart]\n      files: []\n    - name: eslint\n      languages: [Javascript, TypeScript]\n      extensions: [.js, .jsm, .jsx, .mjs, .ts, .tsx, .vue]\n      files: []\n    - name: lizard\n",
      "reason": "no keywords found"
    },
    {
      "path": ".codacy/tools-configs/semgrep.yaml",
      "preview": "rules:\n    - id: bash.curl.security.curl-eval.curl-eval\n      languages:\n        - bash\n      message: Data is being eval'd from a `curl` command. An attacker with control of the server in the `curl` command could inject malicious code into the `eval`, resulting in a system comrpomise. Avoid eval'ing untrusted data if you can. If you must do this, consider checking the SHA sum of the content returned by the server to verify its integrity.\n      metadata:\n        category: security\n        confidence: MEDIUM\n        cwe:\n            - 'CWE-95: Improper Neutralization of Directives in Dynamically Evaluated Code (''Eval Injection'')'\n",
      "reason": "no keywords found"
    }
  ],
  "matched_headers": 361,
  "missing_headers": 35,
  "patterns": [
    "copyright\\s*\u00a9\\s*20\\d{2}\\s*justin\\s*k\\.?\\s*lietz",
    "copyright\\s*\\(c\\)\\s*20\\d{2}\\s*justin\\s*k\\.?\\s*lietz",
    "justin\\s*k\\.?\\s*lietz",
    "neuroca,\\s*inc\\.?",
    "all\\s*rights\\s*reserved",
    "see\\s+license\\s+file",
    "void\\s+dynamics\\s+model"
  ],
  "repo_head": "e47475d45d2f7a5f29bbabb62ded7ee6cad8f00f",
  "root": "/mnt/ironwolf/git/Prometheus_VDM",
  "scanned_files": 396
}