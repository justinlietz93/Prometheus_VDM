{
  "entities": [
    {
      "name": "VDM_Nexus_Approval_CLI",
      "observations": [
        "Path: [approval_cli.py](VDM_Nexus/scripts/approval_cli.py:1) \u2022 Thin wrapper that shells to canonical approvals CLI; read-only wrapper, no secrets.",
        "Policy: Env precedence CLI > env > .env; sets VDM_NEXUS=1; prompts handled by canonical CLI.",
        "Docs: [scripts/README.md \u00a7Approvals wrapper](VDM_Nexus/scripts/README.md:41)",
        "Timestamp: 2025-10-28T04:59:13Z",
        "Path: [approval_cli.py](VDM_Nexus/scripts/approval_cli.py:1)",
        "Docs: [scripts/README.md](VDM_Nexus/scripts/README.md:41)"
      ],
      "type": "ScriptTool"
    },
    {
      "name": "Canonical_Approve_Tag_CLI",
      "observations": [
        "Path: [approve_tag.py](Derivation/code/common/authorization/approve_tag.py:1) \u2022 Admin-gated approvals CLI (password prompt), updates approvals DB.",
        "Usage overview: [authorization/README.md](Derivation/code/common/authorization/README.md:1)",
        "Referenced by wrapper: [approval_cli.py](VDM_Nexus/scripts/approval_cli.py:1)",
        "Path: [approve_tag.py](Derivation/code/common/authorization/approve_tag.py:1)",
        "Guide: [authorization/README.md](Derivation/code/common/authorization/README.md:1)"
      ],
      "type": "CanonicalTool"
    },
    {
      "name": "Task_1_2_Validation_Plan",
      "observations": [
        "Checklist locus: [TODO_CHECKLIST.md \u00b7 Task 1.2 Validation](VDM_Nexus/TODO_CHECKLIST.md:87)",
        "Steps: (1) approval_cli.py check/print-env; (2) approve flow via run -- approve ...; (3) quarantine smoke with --allow-unapproved to produce failed_runs + policy JSON via io_paths.",
        "Plan recorded: [progress.md entry](memory-bank/progress.md:1)"
      ],
      "type": "Process"
    },
    {
      "name": "Quarantine_Routing_Policy",
      "observations": [
        "IO helper reference: [io_paths.py](Derivation/code/common/io_paths.py:1)",
        "Expectation: unapproved runs route artifacts to failed_runs/ with contradiction/policy receipts (JSON/CSV).",
        "Cited in checklist validation: [TODO_CHECKLIST.md](VDM_Nexus/TODO_CHECKLIST.md:89)"
      ],
      "type": "Policy"
    },
    {
      "name": "Env_Precedence_Policy",
      "observations": [
        "Rule: CLI flags > env (VDM_REPO_ROOT, VDM_APPROVAL_DB, VDM_APPROVAL_ADMIN_DB) > .env",
        "Declared in: [scripts/README.md](VDM_Nexus/scripts/README.md:20) and implemented in [approval_cli.py](VDM_Nexus/scripts/approval_cli.py:102)"
      ],
      "type": "Policy"
    },
    {
      "name": "Memory_Bank_Update_2025-10-28",
      "observations": [
        "Decision log: [decisionLog.md entry](memory-bank/decisionLog.md:1)",
        "Progress log: [progress.md entry](memory-bank/progress.md:1)",
        "Scope: adoption of approvals wrapper; documentation; pending Task 1.2 validation."
      ],
      "type": "Record"
    },
    {
      "name": "Preflight_Fixed_Tag_Policy",
      "observations": [
        "Rule: Preflight runs use fixed tag 'preflight' in DB rows.",
        "Table variant: '<runner>_preflight'; preflight=1 flag enforced.",
        "Files: [results_db.py](Derivation/code/common/data/results_db.py:1); [preflight_db.py](Derivation/code/common/data/preflight_db.py:1)",
        "Timestamp: 2025-10-29T07:02:05Z"
      ],
      "type": "Policy"
    },
    {
      "name": "Test_Runtime_Guard_Forbids_Begin_Run_In_Tests",
      "observations": [
        "Path: [conftest.py](Derivation/code/tests/conftest.py:1) installs guard on results_db.begin_run",
        "Enforces preflight-only DB usage in tests; remediation message provided",
        "Timestamp: 2025-10-29T07:02:11Z"
      ],
      "type": "Test"
    },
    {
      "name": "Static_Lint_Preflight_API_Checker",
      "observations": [
        "Path: [check_tests_preflight_api.py](tools/lint/check_tests_preflight_api.py:1)",
        "Flags forbidden begin_run in tests; whitelists [test_preflight_guard.py](Derivation/code/tests/ci/test_preflight_guard.py:1)",
        "Bandit-safe: avoids bare except/pass; logs warnings",
        "Timestamp: 2025-10-29T07:02:24Z"
      ],
      "type": "ScriptTool"
    },
    {
      "name": "CI_Preflight_Guard_Test",
      "observations": [
        "Path: [test_preflight_guard.py](Derivation/code/tests/ci/test_preflight_guard.py:1)",
        "Asserts begin_run and begin_real_run blocked; begin_preflight_run allowed; validates get_latest_preflight; cleans DB file",
        "Timestamp: 2025-10-29T07:02:50Z"
      ],
      "type": "Test"
    },
    {
      "name": "Results_DB_Preflight_Invariants_And_Helpers",
      "observations": [
        "Path: [results_db.py](Derivation/code/common/data/results_db.py:1)",
        "Added preflight column migration; variant alignment invariants; helpers: begin_preflight_run, begin_real_run, get_preflight_runs, get_latest_preflight, get_real_runs",
        "Timestamp: 2025-10-29T07:03:12Z"
      ],
      "type": "CodeChange"
    },
    {
      "name": "Preflight_DB_Route_And_Tag_Deprecation",
      "observations": [
        "Path: [preflight_db.py](Derivation/code/common/data/preflight_db.py:1)",
        "Route through begin_preflight_run; deprecate/ignore 'tag' in log_preflight; clarified docs",
        "Timestamp: 2025-10-29T07:03:20Z"
      ],
      "type": "CodeChange"
    },
    {
      "name": "Preflight_Separation_Guardrails_Summary",
      "observations": [
        "Separation enforced via: runtime guard, static lint, DB invariants, preflight table variant, fixed tag 'preflight'",
        "Tests avoid outputs artifacts; CI test validates guard + latest preflight helper",
        "Next: wire lint into CI; document policy + helper APIs",
        "Timestamp: 2025-10-29T07:04:29Z"
      ],
      "type": "Summary"
    },
    {
      "name": "Preflight_Policy_Context",
      "observations": [
        "Active context: enforcing strict separation between preflight and real runs; DB-backed logging only; no outputs artifacts from preflight tests",
        "Latest changes: fixed-tag policy; latest-preflight helper; CI guard test; lint whitelist for enforcement test",
        "Timestamp: 2025-10-29T07:04:46Z"
      ],
      "type": "Context"
    }
  ],
  "provenance": {
    "source_files": [
      "VDM_Nexus/scripts/approval_cli.py",
      "VDM_Nexus/scripts/README.md",
      "Derivation/code/common/authorization/approve_tag.py",
      "Derivation/code/common/authorization/README.md",
      "VDM_Nexus/TODO_CHECKLIST.md",
      "Derivation/code/common/io_paths.py",
      "memory-bank/decisionLog.md",
      "memory-bank/progress.md"
    ]
  },
  "set_id": "kg-entities",
  "set_version": "1.0",
  "updated_utc": "2025-10-29T07:04:46Z"
}
